#!/usr/bin/env ruby
# frozen_string_literal: true

# (c) 2019 The Society of Research Software Engineering
#
# Author: Mark Turner

require 'rubygems'
require 'bundler'
require 'csv'

# Helper method for exiting on error.
def abort(message)
  warn message
  exit 1
end

# Do we have enough arguments?
if ARGV.length == 2
  # Read the list of society members
  members_file = ARGV[0].chomp
  abort "Cannot read input file '#{members_file}'." unless ::File.readable? members_file
  members_data = ::File.read(members_file)
  # Read the list of voters
  voters_file = ARGV[1].chomp
  abort "Cannot read input file '#{voters_file}'." unless ::File.readable? voters_file
  voters_data = ::File.read(voters_file)
else
  abort "Missing list of members or voters."
end

# If at this point we have no members data, then...
abort "Usage:\tcount <csv input file>\n\tcount < <input>" if members_data.empty?

# If at this point we have no voters data, then...
abort "Usage:\tcount <csv input file>\n\tcount < <input>" if voters_data.empty?

members = CSV.new(members_data, headers: true)
voters = CSV.new(voters_data, headers: true)

# Grab all of the valid members into one long list.
# Also, count the number members and non-members
all_members = []
num_members = 0
num_nonmembers = 0
members.each do |row|
  if row[22] == 'Valid'
    all_members << row[5]
    num_members += 1
  else
    num_nonmembers += 1
  end
end

# Grab all of the voters into one long list.
all_voters = []
voters.each do |row|
  all_voters << row[2]
end

# Loop through the voters and check membership validity.
# Store two lists of valid and invalid voters
valid = []
invalid = []

all_voters.each do |voter|
  if all_members.include?(voter)
    valid << voter
  else
    invalid << voter
  end
end 

# Calculate voter turnout from valid votes and membership list
turnout = (valid.length.to_f / all_members.length.to_f) * 100.to_f

# Print the results.
puts "Soc RSE Trustee Elections 2019: Validation\n------------------------------"
puts "Total members: #{all_members.length}"
puts "Total voters: #{all_voters.length}"
puts "Voter turnout: #{turnout.round(2)}%"
puts "Valid voters: #{valid.length}"
puts "Invalid voters: #{invalid.length}"

puts invalid.to_csv
